{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4f0e95_9092e1bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T07:25:05Z",
      "side": 1,
      "message": "Not following commit guidelines.",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "326d66da_0c4e4faa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "fixed it",
      "parentUuid": "8d4f0e95_9092e1bf",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "626d11a0_8e349a2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-26T07:08:37Z",
      "side": 1,
      "message": "would not say that the Asset interfaces are redundant interfaces, they are primary interfaces which has values from the VPD data. Some other interfaces may also be there which use the same data.",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96729d02_4d7e8e9a",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-26T07:08:37Z",
      "side": 1,
      "message": "why is this not in constants.hpp",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7aa1874_022b4bba",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "this map is w.r.t dbus property and values. so i kept in dbus utility.",
      "parentUuid": "96729d02_4d7e8e9a",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "722a5525_37123dc1",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-26T12:22:59Z",
      "side": 1,
      "message": "but you are using the keyword and values from vpd  and the interface constants are in constants.hpp not in the dbusUtility file",
      "parentUuid": "c7aa1874_022b4bba",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2cdc40_a36fcf91",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T07:25:05Z",
      "side": 1,
      "message": "Why do we need all the entries in this map? We need to update common interface irrespective of any condition.\nSo this map should have thing only which are not covered via common interface?",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3d646f_bc1cd2f8",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "common interface in JSON - refers to the interfaces which are common across all FRUs.\n\nHere I don\u0027t need common interface,  I need to find the pairs of d-bus interface and property which holds the same values.\n\nNot all pairs has to be in common interface section in json.",
      "parentUuid": "9f2cdc40_a36fcf91",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21200f7c_b01b9694",
        "filename": "vpd-manager/include/utility/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T12:24:13Z",
      "side": 1,
      "message": "Most of the pairs here are in the list because they are published under common interface which is again because it is under the CI tag in JSON. \n\nIf that segment of JSON is modified, this list here needs to be updated. Implies some part of this list mimics the entry from JSON.\n\nSo, IMO why to have multiple source of same data, will have to maintain both of them in case of any change.\nThis map should only have entries which are not there in the JSON, rest should be taken care with update of CI during write if applicable.\n\n\nAlso, I agree with @jinu.joy.thomas@in.ibm.com. This is a utility file, why should this have such map.\n-\u003e Either have it in constants\n-\u003e or local to the cpp file which uses it.",
      "parentUuid": "fe3d646f_bc1cd2f8",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0df962d_fdece3ba",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-26T07:08:37Z",
      "side": 1,
      "message": "move this to common_utility",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5eab19a_a8ac26b3",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T07:25:05Z",
      "side": 1,
      "message": "Will it convert any variant to string? Or only Binary vector to string?",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae7b5096_c1925f5a",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "when required we can extend this api to convert any other type to string by adding else if statements.",
      "parentUuid": "f5eab19a_a8ac26b3",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "850e1e8e_d280eb63",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e0df962d_fdece3ba",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a247629a_04c0db1c",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 812,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T07:25:05Z",
      "side": 1,
      "message": "How this utility will be used?\nthis API just converts binary vector to string.\n-\u003e the name toString does not work\n-\u003e Why it needs variant as parameter?",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "055e5f27_12269af5",
        "filename": "vpd-manager/include/utility/vpd_specific_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 812,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "for this use case it is converting Binary vector to string.\nwhen required we can extend this api to convert any other type in DbusVariantType to std::string.",
      "parentUuid": "a247629a_04c0db1c",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "495c507c_21c777de",
        "filename": "vpd-manager/src/parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T07:25:05Z",
      "side": 1,
      "message": "The API is already too big, please extract the implementation to another function.",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "948a54c3_ba900e93",
        "filename": "vpd-manager/src/parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2025-03-26T10:15:04Z",
      "side": 1,
      "message": "here I emplace another entry in the interface map. I don\u0027t find a need forfunction.",
      "parentUuid": "495c507c_21c777de",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f4eeb0_1d5297a6",
        "filename": "vpd-manager/src/parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T12:24:13Z",
      "side": 1,
      "message": "There is nothing called as \"need of a function\".\nIdeally it is a good practice to keep the function small for maintainability.\n\nThis function is already more that 150 lines of code. Adding any more code to the same function just makes it more tough to maintain.\n\nWhat is the downside you see in taking this code change to a new function?",
      "parentUuid": "948a54c3_ba900e93",
      "revId": "9e63c183eb8faa3cd49b130c1af787c6b278c923",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}