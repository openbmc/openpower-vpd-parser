{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "82ece7a6_72df37df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1001932
      },
      "writtenOn": "2025-10-27T14:21:54Z",
      "side": 1,
      "message": "fieldmode not defined considered as lab mode",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82834294_4ffd924d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1001932
      },
      "writtenOn": "2025-10-27T14:21:54Z",
      "side": 1,
      "message": "adding new line for next test set enables readability.",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b0b4774_c0f338a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-28T14:50:50Z",
      "side": 1,
      "message": "Commit message would become too long. I do not see any commit message guideline for test cases?",
      "parentUuid": "82834294_4ffd924d",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcdd41bd_0e9e02b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-28T14:50:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82ece7a6_72df37df",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17ab62c4_b87f9a64",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-10-28T13:28:01Z",
      "side": 1,
      "message": "I did not get the intention here, first a map is defined with all the entries and then the output is searched in that map?\nWhy can\u0027t a simple if/else work here with string comparison with a default initialization which is anyways there.",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae197420_284ff7a2",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-28T14:50:50Z",
      "side": 1,
      "message": "Changed to `if else` block",
      "parentUuid": "17ab62c4_b87f9a64",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6851f88c_9680a14a",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 341,
      "author": {
        "id": 1001932
      },
      "writtenOn": "2025-10-27T14:21:54Z",
      "side": 1,
      "message": "can we reduce l_entry scope to within if condition ?",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f877aaeb_473fd8f0",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 341,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-28T14:50:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6851f88c_9680a14a",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a38454_0ce15117",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1001932
      },
      "writtenOn": "2025-10-27T14:21:54Z",
      "side": 1,
      "message": "todo statement is not clear.",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b33921_f4f971bf",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-28T14:50:50Z",
      "side": 1,
      "message": "Can you elaborate what is not clear?",
      "parentUuid": "45a38454_0ce15117",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34c3d79b_cf0c1a62",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-10-29T03:21:58Z",
      "side": 1,
      "message": "Why a TODO is required here. A standard exception is caught and that is being set in the error code. I find the code to be perfect here.\nAny future enhancement will be on need basis, a TODO reflects that something is missing and needs to be fixed in future, which I don\u0027t see here.",
      "parentUuid": "85b33921_f4f971bf",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c1a61cd_3d3cec9c",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-10-29T05:00:42Z",
      "side": 1,
      "message": "`commonUtility::executeCmd` or `commonUtility::toLower` can throw exception. Right now error code is not implemented in them. When error codes are implemented in those APIs, we need to handle that in this `catch` block.",
      "parentUuid": "34c3d79b_cf0c1a62",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4251a8f_0777a58f",
        "filename": "vpd-manager/include/utility/common_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-10-29T12:29:42Z",
      "side": 1,
      "message": "No, I would disagree, once error code is implemented, even then handling won\u0027t be required in catch block.\nSince the catch block is handling std::exception, the error code that you are currently setting would suffice.\n\nIf we traverse both the scenarios.\n\nAs per current situation:\nIf those API throws then they are standard exception which is going to be caught in catch and error code will be set. Hence no TODO required.\n\nIn future:\nWhen those API\u0027s will return error codes for non std::exception type of error, then those error codes will be checked just after the API is called and if set will be logged and function will return from there. So even in that case code will not reach the catch block for those errors, making TODO invalid.",
      "parentUuid": "8c1a61cd_3d3cec9c",
      "revId": "74d3168c3474b8413aa840513a335b244df6d7d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}