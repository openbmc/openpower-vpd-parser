{
  "comments": [
    {
      "key": {
        "uuid": "ba395b81_ab33bd84",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2021-03-21T17:10:25Z",
      "side": 1,
      "message": "I am not sure if this is ok.\nWhy can\u0027t we have some thing like dict[string, dict[string, vector\u003cstring\u003e]].\nThis way in case in future we go ahead and add another brand type we can just go ahead and make an entry to this data structure.",
      "revId": "b828af52e43a34dc67f7ecfe4b21b0590fff45c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a5d45fe_5d94e7bc",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2021-03-21T17:10:25Z",
      "side": 1,
      "message": "Also, if we decide to keep it as static const, can we declare these in consts.hpp?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "b828af52e43a34dc67f7ecfe4b21b0590fff45c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08535ec_2ce678bd",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 702,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2021-03-21T17:10:25Z",
      "side": 1,
      "message": "In case we define the data structure as dict[string, dict[string, vector\u003cstring\u003e]], we will not have to do all these calculations here.\nWe can just read the BR keyword and follow the corresponding dictionary?",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 702,
        "endChar": 5
      },
      "revId": "b828af52e43a34dc67f7ecfe4b21b0590fff45c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}