{
  "comments": [
    {
      "key": {
        "uuid": "a108e887_14770a5a",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "if it is single type- \u0027Binary\u0027, do we need variant here?",
      "range": {
        "startLine": 127,
        "startChar": 4,
        "endLine": 127,
        "endChar": 19
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddf99ed1_3382b059",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "busctl call returns output in variant form. so we need this.",
      "parentUuid": "a108e887_14770a5a",
      "range": {
        "startLine": 127,
        "startChar": 4,
        "endLine": 127,
        "endChar": 19
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db1ee868_f4610eac",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "not compulsory, but recommended to use const and reference in range based for loop.",
      "range": {
        "startLine": 143,
        "startChar": 1,
        "endLine": 143,
        "endChar": 29
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a9f5c00_73e713cd",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "will take the comments out of this commits scope in a separate commit.",
      "parentUuid": "db1ee868_f4610eac",
      "range": {
        "startLine": 143,
        "startChar": 1,
        "endLine": 143,
        "endChar": 29
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2268b488_f94bfd11",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "is this a good idea to have try-catch block inside for loop.?\nOR\nfor loop inside try block would be better?",
      "range": {
        "startLine": 145,
        "startChar": 1,
        "endLine": 146,
        "endChar": 9
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0af1341_25dde627",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "no need of std",
      "range": {
        "startLine": 157,
        "startChar": 16,
        "endLine": 158,
        "endChar": 21
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b6d93a_7a041753",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0af1341_25dde627",
      "range": {
        "startLine": 157,
        "startChar": 16,
        "endLine": 158,
        "endChar": 21
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af5df998_7f4569a2",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "suggestion to always have input parameters as const",
      "range": {
        "startLine": 170,
        "startChar": 42,
        "endLine": 171,
        "endChar": 51
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f623cb4_d5bba8b8",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af5df998_7f4569a2",
      "range": {
        "startLine": 170,
        "startChar": 42,
        "endLine": 171,
        "endChar": 51
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c3899b4_f5064d90",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "variant required here?",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 20
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "979286cf_cc8cba2c",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "yes. as busctl call returns output in variant form",
      "parentUuid": "5c3899b4_f5064d90",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 20
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a3a8157_733aabac",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "previously you checked and then took action on invPath.line 134\nare you sure this is not included xyz path?\nLike you have check in 134 to 142",
      "range": {
        "startLine": 175,
        "startChar": 41,
        "endLine": 175,
        "endChar": 48
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eadd70c4_579bbf76",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "yes. xyz path is not included in this \"invPath\" at line 175.\nBecause am erasing the xyz path if present (check line 137).",
      "parentUuid": "6a3a8157_733aabac",
      "range": {
        "startLine": 175,
        "startChar": 41,
        "endLine": 175,
        "endChar": 48
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65fd9ab1_20e235d9",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "same as above\n\ntry-catch inside for loop",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 180,
        "endChar": 11
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85259e88_5570387e",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "I need the value of \"kw\" to be emplaced in the output json based on a caught exception.\nAlso I need to continue the for loop incase if UnknownProperty exception is caught.\n\nSo I need try catch block inside for loop.",
      "parentUuid": "65fd9ab1_20e235d9",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 180,
        "endChar": 11
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2c9eb7f_8fa3f629",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "I see most of the code is common for getExtraInterfaceProp and getViniProperties\n\nyou can have one single function(merge of these 2), \n1. which has input param \"interface\"\n   as you already have one-\ngetExtraInterfaceProperties(string invPath, string extraInterface,\n\ncaller can send VINI or other extraInterface.\n\n2. retrieving response in if-else - \n   get_if\u003cBinary\u003e\n   get_if\u003cstring\u003e\n\notherwise all code is common.",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 204,
        "endChar": 1
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb7ed2f3_6248e9e6",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "Incase of merging this to a single function:\n\ncaller who needs only vini properties will have to send unnecessary extra interface input params (string extraInterface, json prop, json\u0026 output).\n\nand also there is no common caller who needs both interfaces at the same time.\n\nplaces where we call these methods are entirely different and it depends on some conditions.. so no point in having this together.",
      "parentUuid": "f2c9eb7f_8fa3f629",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 204,
        "endChar": 1
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82080807_51a41d82",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "in case if it wont go to 232- if (itemEEPROM.find(\"type\")\n\nthen you are emplacing TYPE as blank.\n\nyou can have some default value initialized to fruType, \nto avoid spending time in debugging why it is blank.\n\ni will suggest all your private variables to have some default value. if something left empty , will display \"Default\"",
      "range": {
        "startLine": 236,
        "startChar": 8,
        "endLine": 236,
        "endChar": 36
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1b9fb37_13cad0ec",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "please refer line 220. emplacing default value as \"FRU\"",
      "parentUuid": "82080807_51a41d82",
      "range": {
        "startLine": 236,
        "startChar": 8,
        "endLine": 236,
        "endChar": 36
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "265a5d1d_40bb5b8f",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1000353
      },
      "writtenOn": "2021-07-28T17:36:55Z",
      "side": 1,
      "message": "incase if you fall to  line-191\nwhich means you will not have extraInterfacePropertiesValue in js. And objFound \u003d false\n\nDO you want to check objFound and put some message here.?",
      "range": {
        "startLine": 251,
        "startChar": 16,
        "endLine": 251,
        "endChar": 77
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae88cff_580fdfe5",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2021-07-29T09:10:54Z",
      "side": 1,
      "message": "not needed. if object is not found I simply ignore it and don\u0027t add the object in js.\nalso no need to tell the user that the object is not found.",
      "parentUuid": "265a5d1d_40bb5b8f",
      "range": {
        "startLine": 251,
        "startChar": 16,
        "endLine": 251,
        "endChar": 77
      },
      "revId": "2e32831bcd0ebdb3b5bc8f948483ba5ae92118a1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}