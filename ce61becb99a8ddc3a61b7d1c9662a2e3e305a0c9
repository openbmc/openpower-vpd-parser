{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c95eaac4_37c39150",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000386
      },
      "writtenOn": "2023-02-27T10:54:11Z",
      "side": 1,
      "message": "Otherwise seems good.",
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a81d5a0_590b7bd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1001643
      },
      "writtenOn": "2023-02-27T11:24:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c95eaac4_37c39150",
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5024091e_827bcea2",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 181,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-02-27T11:25:51Z",
      "side": 1,
      "message": "If you know the return type of an api, please provide it. here you can change it to bool and add the return type in doxygen",
      "range": {
        "startLine": 181,
        "startChar": 7,
        "endLine": 181,
        "endChar": 11
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb41fb0b_9acbfb1e",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-02-27T11:25:51Z",
      "side": 1,
      "message": "please use JEDEC_RESERVED_BITS instead of this JEDEC_SDRAM_IO_WIDTH_RESERVED_BITS and add a comment if req.",
      "range": {
        "startLine": 191,
        "startChar": 14,
        "endLine": 191,
        "endChar": 48
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d580f314_a8f2e2be",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 206,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-02-27T11:25:51Z",
      "side": 1,
      "message": "why do you wanna specify the operation \"RIGHT_SHIFT\" in a variable name?\n\nPlease remove these two variables RIGHT_SHIFT_BY_FIVE_POSN; and RIGHT_SHIFT_BY_THREE_POSN; and hardcode the values in code and provide a comment.",
      "range": {
        "startLine": 206,
        "startChar": 17,
        "endLine": 206,
        "endChar": 42
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88c6a7b9_653ae8a0",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 209,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-02-27T11:25:51Z",
      "side": 1,
      "message": "the const variables you provided for each and every value is not making sense to me. This is polluting this file and confusing.\n\nEg: here instead of JEDEC_DIE_PER_PKG_RESERVED_BITS_VALUE\u003d1 , just give a name as BIT_001_RESERVED\u003d1. and make use of this generic variable at other places too.\n\nIf in future DDR6 comes, this file will become clumsy with ddr4, ddr5 and ddr6 const expr.",
      "range": {
        "startLine": 208,
        "startChar": 16,
        "endLine": 209,
        "endChar": 46
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12b30ec9_a22c3451",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 387,
      "author": {
        "id": 1000386
      },
      "writtenOn": "2023-02-27T10:54:11Z",
      "side": 1,
      "message": "cout or some trace should be good here.",
      "range": {
        "startLine": 387,
        "startChar": 8,
        "endLine": 387,
        "endChar": 9
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3278be39_c194c08a",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 387,
      "author": {
        "id": 1001643
      },
      "writtenOn": "2023-02-27T10:59:23Z",
      "side": 1,
      "message": "error logging has been taken care before we reach here, so again extra logging is necessary here I feel. we reach here if there are errors and those error logging we are doing at respective place.",
      "parentUuid": "12b30ec9_a22c3451",
      "range": {
        "startLine": 387,
        "startChar": 8,
        "endLine": 387,
        "endChar": 9
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb74c556_559876aa",
        "filename": "vpd-parser/memory_vpd_parser.cpp",
        "patchSetId": 26
      },
      "lineNbr": 437,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-02-27T11:25:51Z",
      "side": 1,
      "message": "I would suggest to have an api called\nsize_t getDDRXDimmSize(sdramType, iterator)\n{\nif (sdramType \u003d\u003d SdRamType::EN_DDR4)\n    {\n        // collect Dimm size value\n        dimmSize \u003d getDimmSize(iterator);\n    }\n    else if (sdramType \u003d\u003d SdRamType::EN_DDR5)\n    {\n        // collect DDR5 Dimm size value\n        dimmSize \u003d getDDR5DimmSize(iterator);\n    }\n    else\n    {\n        cerr \u003c\u003c \"Error: unknown SDRAM type: \" \u003c\u003c sdramType \u003c\u003c endl;\n    }\n\n}\n\nand call this api from readKeywords();",
      "range": {
        "startLine": 423,
        "startChar": 4,
        "endLine": 437,
        "endChar": 0
      },
      "revId": "ce61becb99a8ddc3a61b7d1c9662a2e3e305a0c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}