{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9fe48e33_a358f871",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 81,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-03-26T09:57:17Z",
      "side": 1,
      "message": "Instead of invoking two `std::string` functions, `std::string.substr()` and `bool operator \u003d\u003d (std::string,std::string)` , we can use `std::string.compare(pos1, count1,str)`",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969829b7_6070e762",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 81,
      "author": {
        "id": 1001845
      },
      "writtenOn": "2025-03-27T04:08:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fe48e33_a358f871",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1194785d_025c810c",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 81,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-03-27T18:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "969829b7_6070e762",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c811ded_2bd03894",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 94,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-03-26T09:57:17Z",
      "side": 1,
      "message": "Instead of invoking two `std::string` functions, `std::string.substr()` and `bool operator \u003d\u003d (std::string,std::string)` , we can use `std::string.compare(pos1, count1,str)`",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2182970_e9c4db3f",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 94,
      "author": {
        "id": 1001845
      },
      "writtenOn": "2025-03-27T04:08:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c811ded_2bd03894",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b66352_31e4cf93",
        "filename": "vpd-manager/include/single_fab.hpp",
        "patchSetId": 9
      },
      "lineNbr": 94,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-03-27T18:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2182970_e9c4db3f",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a99bb15_a860c002",
        "filename": "vpd-manager/src/manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-25T15:46:13Z",
      "side": 1,
      "message": "Move this code out of try/catch block and use the return code from \"singleFabImOverride\" to mark the situation where BMC needs to be quiesced. Then throw from here so that main catches the exception and mark the service as failed?\n\nDo you see any downside in case we do this?",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f529c7_b2335d0f",
        "filename": "vpd-manager/src/manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1002186
      },
      "writtenOn": "2025-03-26T09:57:17Z",
      "side": 1,
      "message": "@sunnsr25@in.ibm.com, One downside I see of moving `singleFabImOverride()` out of `try` `catch` block is if `singleFabImOverride()` API throws exception due to any STL call or other method failure.",
      "parentUuid": "3a99bb15_a860c002",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3a5f7bd_8532973b",
        "filename": "vpd-manager/src/manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-26T12:29:23Z",
      "side": 1,
      "message": "\u003e Move this code out of try/catch block and use the return code from \"singleFabImOverride\" to mark the situation where BMC needs to be quiesced.\n\n\nThat is why I said to have return codes instead of throw from the singleFab API.\nRest of the exception can be handled locally and specific return code can be sent back to mark situation where BMC should be quiesced. \nBased on that we can throw from here and fail the service.",
      "parentUuid": "08f529c7_b2335d0f",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cb509e9_49644ac6",
        "filename": "vpd-manager/src/manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1001845
      },
      "writtenOn": "2025-03-27T04:08:36Z",
      "side": 1,
      "message": "Updated",
      "parentUuid": "e3a5f7bd_8532973b",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3d9d16b_a7f021f8",
        "filename": "vpd-manager/src/manager.cpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-28T03:34:19Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8cb509e9_49644ac6",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2480b7_b6000be8",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 153,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-25T15:46:13Z",
      "side": 1,
      "message": "Return int from this API and have some specific error code defined so that its return code can be used to set BMC to Quiesced state?",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60e9c117_5e60c9f6",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 153,
      "author": {
        "id": 1001845
      },
      "writtenOn": "2025-03-27T04:08:36Z",
      "side": 1,
      "message": "Updated",
      "parentUuid": "ed2480b7_b6000be8",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cbdb2ba_03424b82",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 153,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-28T03:34:19Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "60e9c117_5e60c9f6",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2893a400_f3666c59",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 155,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-03-25T15:46:13Z",
      "side": 1,
      "message": "Do we need string copy or reference can be used as it is already const?\nSame for others.",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7984e267_c01fe0f7",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 155,
      "author": {
        "id": 1001845
      },
      "writtenOn": "2025-03-27T04:08:36Z",
      "side": 1,
      "message": "Updated",
      "parentUuid": "2893a400_f3666c59",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a63ba50_0f0b99a3",
        "filename": "vpd-manager/src/single_fab.cpp",
        "patchSetId": 9
      },
      "lineNbr": 155,
      "author": {
        "id": 1000348
      },
      "writtenOn": "2025-03-28T03:34:19Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7984e267_c01fe0f7",
      "revId": "412ee766f468d7c4bfd1ac38811f5365e22455ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}