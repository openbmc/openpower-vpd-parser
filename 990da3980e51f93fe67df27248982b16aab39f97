{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6694e45a_3ca06b18",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "It is already under openpower::vpd::",
      "range": {
        "startLine": 39,
        "startChar": 24,
        "endLine": 39,
        "endChar": 40
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "868f1ea6_448906bd",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6694e45a_3ca06b18",
      "range": {
        "startLine": 39,
        "startChar": 24,
        "endLine": 39,
        "endChar": 40
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd279547_f60dc9a3",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "This is a duplicate code from ibm_vpd_app.cpp\n\nPlease remove this code from ibm_vpd_app.cpp and make use of this api there as well.",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82aa9a89_f28ed3bb",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "in ibm_vpd_app.cpp, vpdVector parsing is not done immediately after parsing json.\nthere are so many code in between(like system vpd file check,skip recollection, chassis status check). In case if I use this api at this line https://github.com/openbmc/openpower-vpd-parser/blob/master/ibm_vpd_app.cpp#L1468 \nthen we will be processing json twice.",
      "parentUuid": "cd279547_f60dc9a3",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3fe8fd9_10a3581c",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-10T05:37:39Z",
      "side": 1,
      "message": "True, agree, the point is why are you parsing the JSON in this function? Why can\u0027t you do all the JSON processing before calling this API?\nAlso, an API called \"getVPDInMap\" should only get VPD in map and this way you can also reuse the code.\n\nALso please make sure if you are calling Json parse then you are handling exception thrown by parsing failure.",
      "parentUuid": "82aa9a89_f28ed3bb",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce258d4d_8ff472f1",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-10T08:04:22Z",
      "side": 1,
      "message": "The purpose here is to handle code redundancy, so lets keep getVPDInMap() impl as it is. Will handle json failure exceptions as needed.\nAnd I don\u0027t want to touch the code in ibm_vpd_app, as it doesn\u0027t fit to use this api.",
      "parentUuid": "a3fe8fd9_10a3581c",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66c3b6f1_4f28ea9f",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-10T08:11:20Z",
      "side": 1,
      "message": "\u003e And I don\u0027t want to touch the code in ibm_vpd_app, as it doesn\u0027t fit to use this api.\nHow it does not fit? It is duplicate code. We can\u0027t keep of pushing duplicate code.",
      "parentUuid": "ce258d4d_8ff472f1",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a3a290f_2f7f5b17",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-10T08:13:24Z",
      "side": 1,
      "message": "keep on*",
      "parentUuid": "66c3b6f1_4f28ea9f",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8175a59a_32c716b0",
        "filename": "ibm_vpd_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-10T08:14:39Z",
      "side": 1,
      "message": "ok. I\u0027ll handle this case by spilting this into two util apis, jsonParse() and vpdIntoMap(). and will handle the redundancy in ibm_vpd_app too.",
      "parentUuid": "66c3b6f1_4f28ea9f",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1064,
        "endChar": 1
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f1961dc_49c9e240",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "Please make use of these defined types. It will make code more readable.",
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cee6c89_75ae58e2",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f1961dc_49c9e240",
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a287c4_fe329970",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "propertyMap",
      "range": {
        "startLine": 79,
        "startChar": 26,
        "endLine": 79,
        "endChar": 59
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bae571bb_78c86dce",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "GetAll returns std::vector\u003cstd::pair\u003c\u003e\u003e and not std::vector\u003cstd::map\u003e\u003e. Cannot use PropertyMap.",
      "parentUuid": "c0a287c4_fe329970",
      "range": {
        "startLine": 79,
        "startChar": 26,
        "endLine": 79,
        "endChar": 59
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d1caea_5dbc2651",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "RecordName",
      "range": {
        "startLine": 80,
        "startChar": 29,
        "endLine": 80,
        "endChar": 40
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d476b0eb_2c737b64",
        "filename": "types.hpp",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1d1caea_5dbc2651",
      "range": {
        "startLine": 80,
        "startChar": 29,
        "endLine": 80,
        "endChar": 40
      },
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9df5803f_b938bcec",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 670,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2023-01-06T13:53:42Z",
      "side": 1,
      "message": "Why this change we required?",
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19d90c2b_94b29fa0",
        "filename": "vpd_tool_impl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 670,
      "author": {
        "id": 1000362
      },
      "writtenOn": "2023-01-09T19:00:22Z",
      "side": 1,
      "message": "we need to refresh the mismatch variable for every keyword(under a record) and not just for every record.",
      "parentUuid": "9df5803f_b938bcec",
      "revId": "990da3980e51f93fe67df27248982b16aab39f97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}