{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eed6d86e_3623dce1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2022-05-04T09:29:41Z",
      "side": 1,
      "message": "typo. This explanation of what the field is irrelevant, btw.",
      "range": {
        "startLine": 16,
        "startChar": 34,
        "endLine": 16,
        "endChar": 45
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd20139c_4f96d31b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2022-05-04T17:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eed6d86e_3623dce1",
      "range": {
        "startLine": 16,
        "startChar": 34,
        "endLine": 16,
        "endChar": 45
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc649cce_1f7a1ce3",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2022-05-04T09:29:41Z",
      "side": 1,
      "message": "Instead of this, I would recommend that we add a \"default\" char to the map and then simply doa  find_first_not_of(char) - that will keep the code cleaner and extendable.",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 980,
        "endChar": 47
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1cd33c7_86c1c3a1",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2022-05-04T10:50:52Z",
      "side": 1,
      "message": "I am not able to follow here. You want to me to add default value for all the keywords in \"svpdKwdMap\" and look for a match here?",
      "parentUuid": "bc649cce_1f7a1ce3",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 980,
        "endChar": 47
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c99e49d_0ef753e3",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2022-05-04T12:44:37Z",
      "side": 1,
      "message": "Yeah, either that or even a default character, for ex: for keywords other than D0, that would be \u0027 \u0027. For D0 it\u0027d be \u0027\\0\u0027. And then the existing code of find_first_not_of(\u003cdefault_char\u003e) will work in all cases.",
      "parentUuid": "c1cd33c7_86c1c3a1",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 980,
        "endChar": 47
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c6c8e1_3cbb1cb1",
        "filename": "ibm_vpd_app.cpp",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2022-05-04T17:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c99e49d_0ef753e3",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 980,
        "endChar": 47
      },
      "revId": "d9a66dee90e84ef6a1739cb53c1e0c5ff0433d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}